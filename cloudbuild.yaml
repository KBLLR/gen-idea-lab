steps:
# 1. Build the container image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', '${_AR_HOSTNAME}/${PROJECT_ID}/${_SERVICE_NAME}/${_SERVICE_NAME}:$COMMIT_SHA', '.']
  id: Build

# 2. Push the container image to Artifact Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', '${_AR_HOSTNAME}/${PROJECT_ID}/${_SERVICE_NAME}/${_SERVICE_NAME}:$COMMIT_SHA']
  id: Push

# 3. Deploy container image to Cloud Run
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args:
    - 'run'
    - 'deploy'
    - '${_SERVICE_NAME}'
    - '--image=${_AR_HOSTNAME}/${PROJECT_ID}/${_SERVICE_NAME}/${_SERVICE_NAME}:$COMMIT_SHA'
    - '--region=${_DEPLOY_REGION}'
    - '--platform=managed'
    - '--allow-unauthenticated'
    # Securely mount the API key from Secret Manager.
    # The secret name is passed as a substitution variable.
    # The 'latest' alias always uses the most recent version of the secret.
    - '--set-secrets=API_KEY=${_SECRET_NAME}:latest'
  id: Deploy

# This tells Cloud Build to push the built image to the registry.
images:
- '${_AR_HOSTNAME}/${PROJECT_ID}/${_SERVICE_NAME}/${_SERVICE_NAME}:$COMMIT_SHA'

# Define substitution variables with default values.
# These can be overridden when you run the build or configure a trigger.
substitutions:
  _SERVICE_NAME: 'genbooth-idea-lab'
  _DEPLOY_REGION: 'us-central1'
  # The hostname for your Artifact Registry.
  # Example: 'us-central1-docker.pkg.dev'
  _AR_HOSTNAME: 'us-central1-docker.pkg.dev'
  # The name of the secret you created in Secret Manager.
  _SECRET_NAME: 'gemini-api-key'
